@charset "UTF-8";
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  vertical-align: baseline; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

* {
  -webkit-tap-highlight-color: transparent;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-overflow-scrolling: touch; }
  *, *:before, *:after {
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
  *[dir="ltr"] {
    direction: ltr;
    unicode-bidi: embed; }
  *[dir="rtl"] {
    direction: rtl;
    unicode-bidi: embed; }

html, body {
  height: 100%; }

html {
  font-size: 10px;
  font-family: Verdana, Arial, Helvetica, sans-serif;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%;
  quotes: "“" "”"; }

body {
  color: #121212;
  min-width: 320px;
  font-size: 16px;
  font-size: 16px;
  font-size: 1.6rem;
  line-height: 1.5;
  font-kerning: none;
  background-color: #fff; }

body, input, textarea, select, button {
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  font-feature-settings: "liga", "kern";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-smoothing: antialiased;
  text-align: left; }

svg {
  fill: currentColor;
  shape-rendering: geometricPrecision; }

.clearfix {
  zoom: 1; }
  .clearfix:after {
    clear: both; }
  .clearfix:before, .clearfix:after {
    content: '';
    display: table;
    line-height: 0; }

::-moz-selection {
  color: #f00;
  background-color: #000;
  text-shadow: none; }

::selection {
  color: #f00;
  background-color: #000;
  text-shadow: none; }

.content {
  width: 100%;
  float: left; }
  .content__inner {
    padding: 20px; }
  .content p:not(:last-child) {
    margin-bottom: 25px; }
  .content ul:not([class]) {
    margin-bottom: 25px; }
    .content ul:not([class]) li {
      color: #000; }
  .content img :not([class]) {
    max-width: 100%; }

.sidebar + .content {
  padding-left: 220px; }

.layout-wrapper {
  width: 100%;
  min-height: 100%;
  overflow: hidden; }
  .layout-wrapper__container {
    width: 100%;
    height: 100%;
    max-width: 960px;
    padding: 50px 10px;
    margin-left: auto;
    margin-right: auto;
    position: relative; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

body {
  background: #fff;
  color: #f00;
  font-family: Avenir, Calibri, sans-serif; }

#canada-map {
  fill: #174f17; }

#canada-map g {
  -webkit-transition: .3s;
  transition: .3s; }

#canada-map g:hover {
  fill: #2e9e2e;
  cursor: pointer; }

.active, .active:hover {
  fill: #2e2e9e !important; }

#provinceInfo {
  position: absolute;
  top: 0;
  right: 0;
  width: 25%;
  background: #000000;
  background: rgba(0, 0, 0, 0.2);
  pointer-events: none;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  opacity: 0;
  -webkit-transition: 1s;
  transition: 1s; }

@media all and (max-width: 800px) {
  #provinceInfo {
    width: 40%; } }

@media all and (max-width: 750px) {
  #provinceInfo {
    width: 100%;
    position: static;
    background: none; }
  #provinceInfo.show p {
    color: #000 !important;
    margin-bottom: 2rem; } }

#provinceInfo.show {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
  opacity: 1; }

#provinceInfo h1 {
  background: #2e2e9e;
  padding: 3px;
  padding: 3px;
  padding: .3rem;
  padding-left: 10px;
  padding-left: 10px;
  padding-left: 1rem;
  margin-top: -5px;
  margin-top: -5px;
  margin-top: -.5rem;
  font-weight: 400; }

#provinceInfo p {
  margin-left: 20px;
  margin-left: 20px;
  margin-left: 2rem;
  margin-right: 20px;
  margin-right: 20px;
  margin-right: 2rem; }

#provinceInfo img {
  width: 100%; }

.schema {
  width: 100%;
  position: relative;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  color: #cacaca;
  border: 1px solid red; }
  .schema:before {
    content: "";
    display: block;
    padding-bottom: 61.1393692777%; }
  .schema__information {
    position: absolute;
    right: 0;
    top: 0;
    color: #000;
    padding: 15px;
    min-width: 140px;
    border: 1px solid #cacaca; }
    .schema__information h2 {
      font-size: 18px;
      font-size: 18px;
      font-size: 1.8rem; }
  .schema__area, .schema__overlay, .schema__background {
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0; }
    .schema__area img,
    .schema__area svg, .schema__overlay img,
    .schema__overlay svg, .schema__background img,
    .schema__background svg {
      max-width: 100%; }
  .schema__area {
    z-index: 2; }
  .schema__overlay g {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    opacity: 0;
    cursor: pointer;
    -webkit-transition: opacity .2s ease;
    transition: opacity .2s ease; }
    .schema__overlay g:hover, .schema__overlay g.is-animate {
      -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
      opacity: 1; }
  .schema__overlay object {
    width: 100%;
    height: 100%;
    border: 1px solid blue; }
  .schema__overlay {
    z-index: 1; }
  .schema__background {
    z-index: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
